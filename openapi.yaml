openapi: 3.0.0
info:
  title: API para adoção de animais
  description: Sistema para administração de adoção de animais
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: API de testes
tags:
  - name: "Animal"
    description: "Informações e operações sobre os Animais"
  - name: "Ponto de coleta"
    description: "Informações e operações sobre o ponto de coleta"
  - name: "Instituição"
    description: "Informações e operações sobre a instituição"
  - name: "Usuário"
    description: "Informações e operações sobre o Usuário"
    #externalDocs:
    #  description: "Find out more about our store"
    #  url: "http://swagger.io"
paths:
  /animais:
    get:
      tags:
        - "Animal"
      summary: Faz a listagem dos animais
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Filtra animais por nome
        - in: query
          name: raca
          schema:
            type: string
          description: Filtra animais por raca
        - in: query
          name: especie
          schema:
            type: string
          description: Filtra animais por especie
        - in: query
          name: genero
          schema:
            type: string
          description: Filtra animais por genero
        - in: query
          name: instituicao
          schema:
            type: number
          description: Filtra animais por instituicao
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    especie:
                      type: string
                    raca:
                      type: string
                    dataNascimento:
                      type: string
                    genero:
                      type: string
                    instituicao:
                      type: number
    post:
      tags:
        - "Animal"
      summary: Cadastra um novo animal
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                nome:
                  type: string
                especie:
                  type: string
                raca:
                  type: string
                dataNascimento:
                  type: string
                genero:
                  type: string
                instituicao:
                  type: number

      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  nome:
                    type: string
                  especie:
                    type: string
                  raca:
                    type: string
                  dataNascimento:
                    type: string
                  genero:
                    type: string
                  instituicao:
                    type: number

  /animais/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: number
        required: true
    get:
      tags:
        - "Animal"
      summary: Recupera um animal pelo id.

      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    especie:
                      type: string
                    raca:
                      type: string
                    dataNascimento:
                      type: string
                    genero:
                      type: string
                    instituicao:
                      type: number
        404:
          description: Animal não encontrado
          content:
            application/json:
              example: "Not Found"
    delete:
      security:
        - auth: []
      tags:
        - "Animal"
      summary: Deleta um animal pelo id.
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - "Animal"
      summary: Altera um animal baseado no id
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                nome:
                  type: string
                especie:
                  type: string
                raca:
                  type: string
                dataNascimento:
                  type: string
                  format: date  # or date-time
                genero:
                  type: string
                instituicao:
                  type: number
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  nome:
                    type: string
                  especie:
                    type: string
                  raca:
                    type: string
                  dataNascimento:
                    type: string
                    format: date  # or date-time
                  genero:
                    type: string
                  instituicao:
                    type: number

  /ponto:
    get:
      tags:
        - "Ponto de coleta"
      summary: Faz a listagem dos pontos de coleta
      security:
        - auth: []
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Filtra os pontos de coleta por nome
        - in: query
          name: id
          schema:
            type: number
          description: Filtra os pontos de coleta por id
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    endereco:
                      type: string
                    telefone:
                      type: string
                    instituicao:
                      type: number

    post:
      tags:
        - "Ponto de coleta"
      summary: Cadastra um novo ponto de coleta
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                nome:
                  type: string
                endereco:
                  type: string
                telefone:
                  type: string
                instituicao:
                  type: number

      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  nome:
                    type: string
                  endereco:
                    type: string
                  telefone:
                    type: string
                  instituicao:
                    type: number

  /ponto/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: number
        required: true
    get:
      tags:
        - "Ponto de coleta"
      summary: Recupera um ponto de coleta pelo id.
      security:
        - auth: []
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    endereco:
                      type: string
                    telefone:
                      type: string
                    instituicao:
                      type: number
        404:
          description: Ponto de coleta não encontrado
          content:
            application/json:
              example: "Not Found"
    delete:
      tags:
        - "Ponto de coleta"
      summary: Deleta um ponto de coleta pelo id.
      security:
        - auth: []
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - "Ponto de coleta"
      summary: Altera um ponto de coleta baseado no id
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                nome:
                  type: string
                endereco:
                  type: string
                telefone:
                  type: string
                instituicao:
                  type: number
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  nome:
                    type: string
                  endereco:
                    type: string
                  telefone:
                    type: string
                  instituicao:
                    type: number

  /instituicao:
    get:
      tags:
        - "Instituição"
      summary:  Faz a listagem das instituições
      parameters:
        - in: query
          name: id
          schema:
            type: number
          description: Filtra instituições por id
        - in: query
          name: nome
          schema:
            type: string
          description: Filtra instituições por nome
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
    post:
      tags:
        - "Instituição"
      summary: Cadastra uma nova instituição
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                nome:
                  type: string
                endereco:
                  type: string
                telefone:
                  type: string

      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  endereco:
                    type: string
                  telefone:
                    type: string

  /instituicao/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: number
        required: true
    get:
      tags:
        - "Instituição"
      summary: Recupera uma instituição pelo id.

      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    endereco:
                      type: string
                    telefone:
                      type: string
        404:
          description: Instituição não encontrada
          content:
            application/json:
              example: "Not Found"
    delete:
      tags:
        - "Instituição"
      summary: Deleta uma instituição pelo id.
      security:
        - auth: []
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - "Instituição"
      summary: Altera uma instituição buscando pelo id
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                nome:
                  type: string
                endereco:
                  type: string
                telefone:
                  type: string
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  nome:
                    type: string
                  endereco:
                    type: string
                  telefone:
                    type: string

  /usuarios:
    get:
      tags:
        - Usuário
      summary: Faz a listagem dos usuários
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    email:
                      type: string
                    telefone:
                      type: string
                    nascimento:
                      type: string
                      format: date  # or date-time
    post:
      tags:
        - Usuário
      summary: Faz o cadastro do usuários
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                telefone:
                  type: string
                nascimento:
                  type: string
                  format: date  # or date-time
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
                  cpf:
                    type: string
                  telefone:
                    type: string
                  nascimento:
                    type: string
                    format: date  # or date-time

  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: number
        required: true
    get:
      tags:
        - "Usuário"
      summary: Recupera um usuário pelo id.
      security:
        - auth: []

      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    nome:
                      type: string
                    email:
                      type: string
                    telefone:
                      type: string
                    nascimento:
                      type: string
                      format: date  # or date-time
        404:
          description: Usuário não encontrado
          content:
            application/json:
              example: "Not Found"
    delete:
      tags:
        - "Usuário"
      summary: Deleta um usuário pelo id
      security:
        - auth: []
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - "Usuário"
      summary: Altera um usuário buscando pelo id
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                cpf:
                  type: string
                telefone:
                  type: string
                nascimento:
                  type: string
                  format: date  # or date-time
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
                  cpf:
                    type: string
                  telefone:
                    type: string
                  nascimento:
                    type: string
                    format: date  # or date-time
  /requisicao:
    get:
      tags:
        - "Requisição"
      summary: Faz a listagem das requisições
      security:
        - auth: []
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    animalId:
                      type: number
                    usuarioId:
                      type: number
                    status:
                      type: string
                    dataDeCadastro:
                      type: string
                    dataDeFechamento:
                      type: string
    post:
      tags:
        - Requisição
      summary: Faz o cadastro da requisição
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                animalId:
                  type: number
                usuarioId:
                  type: number
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    animalId:
                      type: number
                    usuarioId:
                      type: number
                    status:
                      type: string
                    dataDeCadastro:
                      type: string
                    dataDeFechamento:
                      type: string
        400:
          description: Usuário ou Animal não encontrados
  /requisicao/status:
    put:
      tags:
        - "Requisição"
      summary: Faz a listagem das requisições
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                requisicaoId:
                  type: number
                status:
                  type: string
      responses:
        200:
          description: Sucesso
        400:
          description: Dados enviados de forma incorreta
        404:
          description: Requisição não encontrada
  /inventario:
    get:

      tags:
        - Inventário
      summary: Faz a listagem dos inventário
      security:
        - auth: []
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data_doacao:
                      type: string
                    instituicaoId:
                      type: number
                    item:
                      type: string
    post:
      tags:
        - Inventário
      summary: Faz o cadastro do inventário
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                data_doacao:
                  type: string
                instituicaoId:
                  type: number
                item:
                  type: string
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  data_doacao:
                    type: string
                  instituicaoId:
                    type: number
                  item:
                    type: string
  /inventario/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: number
        required: true
    get:
      security:
        - auth: []
      tags:
        - "Inventário"
      summary: Recupera um inventário pelo id.

      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  data_doacao:
                    type: string
                  instituicaoId:
                    type: number
                  item:
                    type: string
        404:
          description: Inventário não encontrado
          content:
            application/json:
              example: "Not Found"
    delete:
      security:
        - auth: []
      tags:
        - "Inventário"
      summary: Deleta um inventário pelo id.
      responses:
        '204':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
    put:
      tags:
        - "Inventário"
      summary: Altera um inventário baseado no id
      security:
        - auth: []
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                data_doacao:
                  type: string
                instituicaoId:
                  type: number
                item:
                  type: string
      responses:
        201:
          description: "Sucesso"
          content:
            apllication/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  data_doacao:
                    type: string
                  instituicaoId:
                    type: number
                  item:
                    type: string
components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
